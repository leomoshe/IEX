//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IEX.Server.Monitor.ServerServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IexServerError", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Interfaces")]
    [System.SerializableAttribute()]
    public partial class IexServerError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImplementationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInfo {
            get {
                return this.AdditionalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInfoField, value) != true)) {
                    this.AdditionalInfoField = value;
                    this.RaisePropertyChanged("AdditionalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Implementation {
            get {
                return this.ImplementationField;
            }
            set {
                if ((object.ReferenceEquals(this.ImplementationField, value) != true)) {
                    this.ImplementationField = value;
                    this.RaisePropertyChanged("Implementation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Instance {
            get {
                return this.InstanceField;
            }
            set {
                if ((object.ReferenceEquals(this.InstanceField, value) != true)) {
                    this.InstanceField = value;
                    this.RaisePropertyChanged("Instance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerInfo", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Interfaces")]
    [System.SerializableAttribute()]
    public partial class ServerInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IEX.Server.Monitor.ServerServiceReference.ConnectionInfoCollection ConnectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HashCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IEX.Server.Monitor.ServerServiceReference.ServiceInfoCollection ServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IEX.Server.Monitor.ServerServiceReference.ServerState StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserConnectedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IEX.Server.Monitor.ServerServiceReference.ConnectionInfoCollection Connections {
            get {
                return this.ConnectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionsField, value) != true)) {
                    this.ConnectionsField = value;
                    this.RaisePropertyChanged("Connections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HashCode {
            get {
                return this.HashCodeField;
            }
            set {
                if ((this.HashCodeField.Equals(value) != true)) {
                    this.HashCodeField = value;
                    this.RaisePropertyChanged("HashCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IEX.Server.Monitor.ServerServiceReference.ServiceInfoCollection Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IEX.Server.Monitor.ServerServiceReference.ServerState Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpTime {
            get {
                return this.UpTimeField;
            }
            set {
                if ((this.UpTimeField.Equals(value) != true)) {
                    this.UpTimeField = value;
                    this.RaisePropertyChanged("UpTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserConnected {
            get {
                return this.UserConnectedField;
            }
            set {
                if ((object.ReferenceEquals(this.UserConnectedField, value) != true)) {
                    this.UserConnectedField = value;
                    this.RaisePropertyChanged("UserConnected");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ConnectionInfoCollection", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Interfaces", ItemName="ConnectionInfo")]
    [System.SerializableAttribute()]
    public class ConnectionInfoCollection : System.Collections.Generic.List<IEX.Server.Monitor.ServerServiceReference.ConnectionInfo> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ServiceInfoCollection", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Interfaces", ItemName="ServiceInfo")]
    [System.SerializableAttribute()]
    public class ServiceInfoCollection : System.Collections.Generic.List<IEX.Server.Monitor.ServerServiceReference.ServiceInfo> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerState", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Interfaces")]
    public enum ServerState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Loading = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Idle = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Connected = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectionInfo", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Interfaces")]
    [System.SerializableAttribute()]
    public partial class ConnectionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IEX.Server.Monitor.ServerServiceReference.ConnectionInfo.ConnectionMode ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IEX.Server.Monitor.ServerServiceReference.ConnectionInfo.ConnectionMode Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((this.ModeField.Equals(value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ConnectionInfo.ConnectionMode", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Interfaces")]
        public enum ConnectionMode : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Control = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            View = 1,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceInfo", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Interfaces")]
    [System.SerializableAttribute()]
    public partial class ServiceInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IEX.Server.Monitor.ServerServiceReference.ImplementationInfoCollection ImplementationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IEX.Server.Monitor.ServerServiceReference.ImplementationInfoCollection Implementations {
            get {
                return this.ImplementationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ImplementationsField, value) != true)) {
                    this.ImplementationsField = value;
                    this.RaisePropertyChanged("Implementations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ImplementationInfoCollection", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Interfaces", ItemName="ImplementationInfo")]
    [System.SerializableAttribute()]
    public class ImplementationInfoCollection : System.Collections.Generic.List<IEX.Server.Monitor.ServerServiceReference.ImplementationInfo> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImplementationInfo", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Interfaces")]
    [System.SerializableAttribute()]
    public partial class ImplementationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IEX.Server.Monitor.ServerServiceReference.InstanceInfoCollection InstancesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IEX.Server.Monitor.ServerServiceReference.InstanceInfoCollection Instances {
            get {
                return this.InstancesField;
            }
            set {
                if ((object.ReferenceEquals(this.InstancesField, value) != true)) {
                    this.InstancesField = value;
                    this.RaisePropertyChanged("Instances");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InstanceInfoCollection", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Interfaces", ItemName="InstanceInfo")]
    [System.SerializableAttribute()]
    public class InstanceInfoCollection : System.Collections.Generic.List<IEX.Server.Monitor.ServerServiceReference.InstanceInfo> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstanceInfo", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Interfaces")]
    [System.SerializableAttribute()]
    public partial class InstanceInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IEX.Server.Monitor.ServerServiceReference.ParameterInfoCollection ParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IEX.Server.ServiceManagement.ServiceState StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IEX.Server.Monitor.ServerServiceReference.ParameterInfoCollection Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IEX.Server.ServiceManagement.ServiceState Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ParameterInfoCollection", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Interfaces", ItemName="ParameterInfo")]
    [System.SerializableAttribute()]
    public class ParameterInfoCollection : System.Collections.Generic.List<IEX.Server.Monitor.ServerServiceReference.ParameterInfo> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParameterInfo", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Interfaces")]
    [System.SerializableAttribute()]
    public partial class ParameterInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServerServiceReference.IServer", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILongPolling/NotificationsReady", ReplyAction="http://tempuri.org/ILongPolling/NotificationsReadyResponse")]
        string[] NotificationsReady();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer/GetStringNotifications", ReplyAction="http://tempuri.org/IServer/GetStringNotificationsResponse")]
        string[] GetStringNotifications(string handler);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer/GetIexServerErrorNotifications", ReplyAction="http://tempuri.org/IServer/GetIexServerErrorNotificationsResponse")]
        IEX.Server.Monitor.ServerServiceReference.IexServerError[] GetIexServerErrorNotifications(string handler);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer/GetServerStatus", ReplyAction="http://tempuri.org/IServer/GetServerStatusResponse")]
        IEX.Server.Monitor.ServerServiceReference.ServerInfo GetServerStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer/Connect", ReplyAction="http://tempuri.org/IServer/ConnectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IEX.Server.WebServices.Core.IexServerConnectionFault), Action="http://tempuri.org/IServer/ConnectIexServerConnectionFaultFault", Name="IexServerConnectionFault", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Core")]
        int Connect(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer/GetExpectedBitmapsLocation", ReplyAction="http://tempuri.org/IServer/GetExpectedBitmapsLocationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IEX.Server.WebServices.Core.IexServerConnectionFault), Action="http://tempuri.org/IServer/GetExpectedBitmapsLocationIexServerConnectionFaultFaul" +
            "t", Name="IexServerConnectionFault", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Core")]
        string GetExpectedBitmapsLocation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer/ForceConnect", ReplyAction="http://tempuri.org/IServer/ForceConnectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IEX.Server.WebServices.Core.IexServerConnectionFault), Action="http://tempuri.org/IServer/ForceConnectIexServerConnectionFaultFault", Name="IexServerConnectionFault", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Core")]
        void ForceConnect(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServer/Disconnect", ReplyAction="http://tempuri.org/IServer/DisconnectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IEX.Server.WebServices.Core.IexServerConnectionFault), Action="http://tempuri.org/IServer/DisconnectIexServerConnectionFaultFault", Name="IexServerConnectionFault", Namespace="http://schemas.datacontract.org/2004/07/IEX.Server.WebServices.Core")]
        void Disconnect();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerChannel : IEX.Server.Monitor.ServerServiceReference.IServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerClient : System.ServiceModel.ClientBase<IEX.Server.Monitor.ServerServiceReference.IServer>, IEX.Server.Monitor.ServerServiceReference.IServer {
        
        public ServerClient() {
        }
        
        public ServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] NotificationsReady() {
            return base.Channel.NotificationsReady();
        }
        
        public string[] GetStringNotifications(string handler) {
            return base.Channel.GetStringNotifications(handler);
        }
        
        public IEX.Server.Monitor.ServerServiceReference.IexServerError[] GetIexServerErrorNotifications(string handler) {
            return base.Channel.GetIexServerErrorNotifications(handler);
        }
        
        public IEX.Server.Monitor.ServerServiceReference.ServerInfo GetServerStatus() {
            return base.Channel.GetServerStatus();
        }
        
        public int Connect(string user) {
            return base.Channel.Connect(user);
        }
        
        public string GetExpectedBitmapsLocation() {
            return base.Channel.GetExpectedBitmapsLocation();
        }
        
        public void ForceConnect(string user) {
            base.Channel.ForceConnect(user);
        }
        
        public void Disconnect() {
            base.Channel.Disconnect();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServerServiceReference.IPinger", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
    public interface IPinger {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPinger/Ping", ReplyAction="http://tempuri.org/IPinger/PingResponse")]
        void Ping(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPinger/PingServerStatus", ReplyAction="http://tempuri.org/IPinger/PingServerStatusResponse")]
        System.Collections.Generic.Dictionary<string, string> PingServerStatus(out bool has_changes, int hash_code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPingerChannel : IEX.Server.Monitor.ServerServiceReference.IPinger, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PingerClient : System.ServiceModel.ClientBase<IEX.Server.Monitor.ServerServiceReference.IPinger>, IEX.Server.Monitor.ServerServiceReference.IPinger {
        
        public PingerClient() {
        }
        
        public PingerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PingerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PingerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PingerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Ping(string id) {
            base.Channel.Ping(id);
        }
        
        public System.Collections.Generic.Dictionary<string, string> PingServerStatus(out bool has_changes, int hash_code) {
            return base.Channel.PingServerStatus(out has_changes, hash_code);
        }
    }
}
