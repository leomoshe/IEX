<?xml version="1.0"?>
<doc>
    <assembly>
        <name>USB.HID.Driver</name>
    </assembly>
    <members>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="!:USBInterface"/> class.
            </summary>
            <param name="vid">The vendor id of the USB device (e.g. vid_06ba)</param>
            <param name="pid">The product id of the USB device (e.g. pid_ffff)</param>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="!:USBInterface"/> class.
            </summary>
            <param name="vid">The vendor id of the USB device (e.g. vid_06ba)</param>
            <param name="pid">The product id of the USB device (e.g. pid_ffff)</param>
            <param name="Dinterface">The product interface of the USB device (e.g. mi_01)</param>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:USBHIDDRIVER.USB.HIDUSBDevice"/> class.
            And tries to establish a connection to the device.
            </summary>
            <param name="vID">The vendor ID of the USB device.</param>
            <param name="pID">The product ID of the USB device.</param>
            <param name="iID">The product interface of the USB device</param>
            <param name="serialID">The product serial number of the USB device</param>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.connectDevice">
            <summary>
            Connects the device.
            </summary>
            <returns>true if connection is established</returns>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.searchDevice">
            <summary>
            Searches the device with soecified vendor and product id an connect to it.
            </summary>
            <returns></returns>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.getDevice">
            <summary>
            returns the number of devices with specified vendorID and productID 
            </summary>
            <returns>returns the number of devices with specified vendorID and productID</returns>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.writeData(System.Byte[])">
            <summary>
            Writes the data.
            </summary>
            <param name="bDataToWrite">The b data to write.</param>
            <returns></returns>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.readDataOnce(System.Byte[]@)">
            <summary>
            
            </summary>
            <param name="outData"></param>
            <returns></returns>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.readDataThread">
            <summary>
             ThreadMethod for reading Data
            </summary>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.GetProductNumber">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.GetManufacturerNumber">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.GetSerialNumber">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.readData">
            <summary>
            controls the read thread
            </summary>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.abortreadData">
            <summary>
            Aborts the read thread.
            </summary>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.startRead">
            <summary>
            Starts reading. 
            If you execute this command a thread is started which listens to the USB device and waits for data.
            </summary>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.stopRead">
            <summary>
            Stops the read thread.
            By executing this command the read data thread is stopped and now data will be received.
            </summary>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.enableUsbBufferEvent(System.EventHandler)">
            <summary>
            Enables the usb buffer event.
            Whenever a dataset is added to the buffer (and so received from the usb device)
            the event handler method will be called.
            </summary>
            <param name="eHandler">The event handler method.</param>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.disconnectDevice">
            <summary>
            Disconnects the device.
            </summary>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.setDeviceData(System.String,System.String,System.String,System.String)">
            <summary>
            Sets the device data.
            </summary>
            <param name="vID">The vendor ID.</param>
            <param name="pID">The product ID.</param>
            <param name="iID">The product Interface number.</param>
            <param name="serialID">The product Serial Number.</param>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.setConnectionState(System.Boolean)">
            <summary>
            Sets the state of the connection.
            </summary>
            <param name="state">state</param>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.getConnectionState">
            <summary>
            Gets the state of the connection.
            </summary>
            <returns>true = connected; false = diconnected</returns>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.getDevices">
            <summary>
            Gets the device count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:USBHIDDRIVER.USB.HIDUSBDevice.DeviceNameMatch(System.Windows.Forms.Message,System.String)">
             <summary>
             Compares two device path names. Used to find out if the device name 
             of a recently attached or removed device matches the name of a 
             device the application is communicating with.
             </summary>
             
             <param name="m"> a WM_DEVICECHANGE message. A call to RegisterDeviceNotification
             causes WM_DEVICECHANGE messages to be passed to an OnDeviceChange routine. </param>
             <param name="mydevicePathName"> a device pathname returned by SetupDiGetDeviceInterfaceDetail
             in an SP_DEVICE_INTERFACE_DETAIL_DATA structure</param>
             
             <returns>
             True if the names match, False if not.
             </returns>
        </member>
        <member name="T:USBHIDDRIVER.List.ListWithEvent">
            <summary>
            A class that works just like ArrayList, but sends event
            notifications whenever the list changes
            </summary>
        </member>
        <member name="M:USBHIDDRIVER.List.ListWithEvent.OnChanged(System.EventArgs)">
            <summary>
            Invoke the Changed event; called whenever list changes
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:USBHIDDRIVER.List.ListWithEvent.Add(System.Object)">
            <summary>
            Fügt am Ende von <see cref="T:System.Collections.ArrayList"></see> ein Objekt hinzu.
            </summary>
            <param name="value">Das <see cref="T:System.Object"></see>, das am Ende der <see cref="T:System.Collections.ArrayList"></see> hinzugefügt werden soll. Der Wert kann null sein.</param>
            <returns>
            Der <see cref="T:System.Collections.ArrayList"></see>-Index, an dem value hinzugefügt wurde.
            </returns>
            <exception cref="T:System.NotSupportedException"><see cref="T:System.Collections.ArrayList"></see> ist schreibgeschützt.- oder -<see cref="T:System.Collections.ArrayList"></see> hat eine feste Größe. </exception>
        </member>
        <member name="E:USBHIDDRIVER.List.ListWithEvent.Changed">
            <summary>
            An event that clients can use to be notified whenever the
            elements of the list change
            </summary>
        </member>
        <member name="T:USBHIDDRIVER.USB.USBSharp">
            <summary>
            Summary description
            </summary>
        </member>
    </members>
</doc>
